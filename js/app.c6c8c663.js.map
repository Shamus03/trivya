{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.tsx","webpack:///./src/registerServiceWorker.ts","webpack:///./src/api.ts","webpack:///./src/views/TriviaGame.tsx","webpack:///./src/views/TriviaSetup.tsx","webpack:///./src/router/index.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","setup","ready","console","log","reloading","navigator","serviceWorker","addEventListener","location","reload","registered","cached","updatefound","updated","reg","confirm","waiting","postMessage","type","offline","error","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","games","collection","createGame","game","add","doc","id","getGame","gameId","OpenTdbResponseCode","openTdb","baseURL","openTdbSessionToken","getTriviaQuestions","difficulty","amount","token","params","encode","resp","TokenEmpty","TokenNotFound","includes","response_code","Success","Error","results","map","q","correctAnswer","decodeURIComponent","correct_answer","allAnswers","incorrect_answers","a","concat","category","question","sort","reverse","props","String","required","loading","loadGame","alert","goToGameSetup","lastGameState","JSON","parse","localStorage","getItem","questionNumber","correctAnswers","incorrectAnswers","selectedAnswer","state","setItem","stringify","questions","currentQuestion","hasNextQuestion","accuracy","goToNextQuestion","chooseAnswer","answer","shareTheseQuestions","share","title","url","href","isNaN","Math","round","difficultyOptions","text","selectedDifficulty","startNewGame","routes","path","component","TriviaSetup","TriviaGame","redirect","router","history","App","use","mount"],"mappings":"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","file":"js/app.c6c8c663.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/trivya/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { defineComponent } from '@vue/runtime-core'\n\nexport default defineComponent({\n  setup() {\n    return () => <div>\n      <router-view />\n    </div>\n  },\n})\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB',\n      )\n      let reloading = true\n      navigator.serviceWorker.addEventListener('controllerchange', () => {\n        if (reloading) return\n        reloading = true\n        window.location.reload()\n      })\n    },\n    registered() {\n      console.log('Service worker has been registered.')\n    },\n    cached() {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound() {\n      console.log('New content is downloading.')\n    },\n    updated(reg) {\n      console.log('New content is available; please refresh.')\n      if (confirm('Updates available - refresh now?')) {\n        reg.waiting?.postMessage({ type: 'SKIP_WAITING' })\n      }\n    },\n    offline() {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error)\n    },\n  })\n}\n","import Axios from 'axios'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseApp  = firebase.initializeApp({\r\n  apiKey: 'AIzaSyDc2ej0u82U5xnQDWjzBNyFBHh3UwFyfpg',\r\n  authDomain: 'trivya-2135a.firebaseapp.com',\r\n  projectId: 'trivya-2135a',\r\n  storageBucket: 'trivya-2135a.appspot.com',\r\n  messagingSenderId: '448392939023',\r\n  appId: '1:448392939023:web:dedce129a86efbe4e1857a',\r\n})\r\n\r\nconst db = firebase.firestore(firebaseApp)\r\n\r\nconst games = db.collection('games')\r\n\r\nexport interface TriviaGame {\r\n  questions: TriviaQuestion[]\r\n}\r\n\r\nexport interface TriviaQuestion {\r\n  question: string\r\n  category: string\r\n  difficulty: string\r\n  correctAnswer: string\r\n  allAnswers: string[]\r\n}\r\n\r\nexport async function createGame(game: TriviaGame): Promise<string> {\r\n  const doc = await games.add(game)\r\n  return doc.id\r\n}\r\n\r\nexport async function getGame(gameId: string): Promise<TriviaGame> {\r\n  const doc = await games.doc(gameId).get()\r\n  const game = doc.data() as TriviaGame\r\n  return game\r\n}\r\n\r\nconst openTdb = Axios.create({\r\n  baseURL: 'https://opentdb.com',\r\n})\r\nlet openTdbSessionToken = ''\r\n\r\nenum OpenTdbResponseCode {\r\n  Success = 0,\r\n  NoResults = 1,\r\n  InvalidParameter = 2,\r\n  TokenNotFound = 3,\r\n  TokenEmpty = 4,\r\n}\r\n\r\nexport async function getTriviaQuestions({ difficulty, amount }: { difficulty?: string, amount?: number }): Promise<TriviaQuestion[]> {\r\n  if (!openTdbSessionToken) {\r\n    const resp = await openTdb.get<{\r\n      token: string\r\n    }>('/api_token.php?command=request')\r\n    openTdbSessionToken = resp.data.token\r\n  }\r\n  const resp = await openTdb.get<{\r\n    response_code: OpenTdbResponseCode,\r\n    results: {\r\n      question: string\r\n      category: string\r\n      type: string\r\n      difficulty: string\r\n      correct_answer: string\r\n      incorrect_answers: string[]\r\n    }[],\r\n  }>('/api.php', {\r\n    params: {\r\n      encode: 'url3986',\r\n      amount,\r\n      difficulty,\r\n      token: openTdbSessionToken,\r\n    },\r\n  })\r\n\r\n  if ([OpenTdbResponseCode.TokenEmpty, OpenTdbResponseCode.TokenNotFound].includes(resp.data.response_code)) {\r\n    openTdbSessionToken = ''\r\n    return await getTriviaQuestions({ difficulty, amount })\r\n  }\r\n\r\n  if (resp.data.response_code != OpenTdbResponseCode.Success) {\r\n    throw new Error('Failed to get questions')\r\n  }\r\n\r\n  return resp.data.results.map(q => {\r\n    const correctAnswer = decodeURIComponent(q.correct_answer)\r\n    const allAnswers = q.incorrect_answers.map((a: string) => decodeURIComponent(a)).concat(correctAnswer)\r\n    return {\r\n      category: decodeURIComponent(q.category),\r\n      difficulty: decodeURIComponent(q.difficulty),\r\n      question: decodeURIComponent(q.question),\r\n      correctAnswer,\r\n      allAnswers: q.type === 'boolean' ? allAnswers.sort().reverse() : allAnswers.sort(),\r\n    }\r\n  })\r\n}","import { getGame, TriviaGame } from '@/api'\r\nimport router from '@/router'\r\nimport { ref, computed, defineComponent, watchEffect } from '@vue/runtime-core'\r\nimport { Transition } from 'vue'\r\nimport canvasConfetti from 'canvas-confetti'\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    gameId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  setup(props) {\r\n    const game = ref(null as TriviaGame | null)\r\n\r\n    const loading = ref(false)\r\n\r\n    const loadGame = async () => {\r\n      loading.value = true\r\n      try {\r\n        game.value = await getGame(props.gameId)\r\n      } catch (e) {\r\n        alert('An error occurred - returning to main page')\r\n        goToGameSetup()\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    loadGame()\r\n\r\n    type LastGameState = {\r\n      gameId: string\r\n      questionNumber: number\r\n      correctAnswers: number\r\n      incorrectAnswers: number\r\n      selectedAnswer: string\r\n    }\r\n\r\n    let lastGameState: LastGameState | null = JSON.parse(localStorage.getItem('last-game') ?? 'null')\r\n\r\n    if (lastGameState?.gameId !== props.gameId) {\r\n      lastGameState = null\r\n    }\r\n\r\n    const questionNumber = ref(lastGameState?.questionNumber ?? 0)\r\n\r\n    const correctAnswers = ref(lastGameState?.correctAnswers ?? 0)\r\n\r\n    const incorrectAnswers = ref(lastGameState?.incorrectAnswers ?? 0)\r\n\r\n    const selectedAnswer = ref(lastGameState?.selectedAnswer ?? '')\r\n\r\n    watchEffect(() => {\r\n      const state: LastGameState = {\r\n        gameId: props.gameId,\r\n        questionNumber: questionNumber.value,\r\n        correctAnswers: correctAnswers.value,\r\n        incorrectAnswers: incorrectAnswers.value,\r\n        selectedAnswer: selectedAnswer.value,\r\n      }\r\n      localStorage.setItem('last-game', JSON.stringify(state))\r\n    })\r\n\r\n    const questions = computed(() => game.value?.questions || [])\r\n\r\n    const currentQuestion = computed(() => questions.value[questionNumber.value])\r\n\r\n    const hasNextQuestion = computed(() => questionNumber.value < questions.value.length - 1)\r\n\r\n    const accuracy = computed(() => correctAnswers.value / (correctAnswers.value + incorrectAnswers.value))\r\n\r\n    const goToNextQuestion = () => {\r\n      if (hasNextQuestion.value) {\r\n        selectedAnswer.value = ''\r\n        questionNumber.value++\r\n      }\r\n    }\r\n\r\n    const goToGameSetup = () => {\r\n      router.push({ name: 'TriviaSetup' })\r\n    }\r\n\r\n    const chooseAnswer = (answer: string) => {\r\n      if (selectedAnswer.value) {\r\n        return\r\n      }\r\n      selectedAnswer.value = answer\r\n      if (answer === currentQuestion.value.correctAnswer) {\r\n        correctAnswers.value++\r\n      } else {\r\n        incorrectAnswers.value++\r\n      }\r\n    }\r\n\r\n    const shareTheseQuestions = () => {\r\n      if (!navigator.share) {\r\n        alert('Your browser does not support sharing!')\r\n        return\r\n      }\r\n\r\n      navigator.share({\r\n        title: 'Trivya',\r\n        url: window.location.href,\r\n      })\r\n    }\r\n\r\n    watchEffect(() => {\r\n      if (correctAnswers.value === game.value?.questions.length) {\r\n        canvasConfetti()\r\n      }\r\n    })\r\n\r\n    return () => loading.value ? <div>Loading...</div> : <div>\r\n      <div class=\"share-these-questions\" onClick={shareTheseQuestions}>\r\n        Share these questions\r\n      </div>\r\n\r\n      <div class=\"question-progress\">\r\n        Question: {questionNumber.value + 1} / {questions.value.length}\r\n      </div>\r\n\r\n      <div class=\"difficulty\">\r\n        Difficulty: {currentQuestion.value.difficulty}\r\n      </div>\r\n\r\n      <div class=\"category\">\r\n        Category: {currentQuestion.value.category}\r\n      </div>\r\n\r\n      <Transition name=\"fade\" mode=\"out-in\">\r\n        <div key={questionNumber.value}>\r\n          <div class=\"question\">\r\n            {currentQuestion.value.question}\r\n          </div>\r\n\r\n          <div class=\"answers\">\r\n            <ul>\r\n              {currentQuestion.value.allAnswers.map(a =>\r\n                <li\r\n                  key={a}\r\n                  onClick={() => chooseAnswer(a)}\r\n                  class={{\r\n                    'correct-answer': selectedAnswer.value && a === currentQuestion.value.correctAnswer,\r\n                    'incorrect-answer': a === selectedAnswer.value && a !== currentQuestion.value.correctAnswer,\r\n                  }}\r\n                >\r\n                  {a}\r\n                </li>,\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Transition>\r\n\r\n      <Transition name=\"slide-fade\">\r\n        {!!selectedAnswer.value && <div>\r\n          <div class=\"accuracy\">\r\n            {!isNaN(accuracy.value) && <>Accuracy: {Math.round(accuracy.value * 100)}%</>}\r\n          </div>\r\n\r\n          {hasNextQuestion.value ?\r\n            <div class=\"next-question\">\r\n              <button onClick={goToNextQuestion}>\r\n              Next Question\r\n              </button>\r\n            </div> :\r\n            <div class=\"set-up-new-game\">\r\n              <button onClick={goToGameSetup}>\r\n              Set up a new game\r\n              </button>\r\n            </div>\r\n          }\r\n        </div>}\r\n      </Transition>\r\n    </div>\r\n  },\r\n})","import router from '@/router'\r\nimport { createGame, getTriviaQuestions } from '@/api'\r\nimport { defineComponent, ref } from '@vue/runtime-core'\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const difficultyOptions = [\r\n      { text: 'Any', value: '' },\r\n      { text: 'Easy', value: 'easy' },\r\n      { text: 'Medium', value: 'medium' },\r\n      { text: 'Hard', value: 'hard' },\r\n    ]\r\n    const selectedDifficulty = ref(difficultyOptions[0].value)\r\n\r\n    const loading = ref(false)\r\n\r\n    const startNewGame = async () => {\r\n      loading.value = true\r\n      try {\r\n        const questions = await getTriviaQuestions({ amount: 10, difficulty: selectedDifficulty.value })\r\n        const gameId = await createGame({ questions })\r\n        router.push({\r\n          name: 'TriviaGame',\r\n          params: {\r\n            gameId: gameId,\r\n          },\r\n        })\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    return () => <div>\r\n      <h4>Set up a new game</h4>\r\n\r\n      <div class=\"difficulty-selector\">\r\n        <div class=\"label\">Select a difficulty:</div>\r\n        {difficultyOptions.map(d => <div><label key={d.value}><input v-model={selectedDifficulty.value} type=\"radio\" value={d.value}></input> {d.text}</label></div>)}\r\n      </div>\r\n      <button class=\"start-new-game\" onClick={startNewGame} disabled={loading.value}>\r\n        {!loading.value ? 'Start!' : 'Loading...'}\r\n      </button>\r\n    </div>\r\n  },\r\n})","import TriviaGame from '@/views/TriviaGame'\nimport TriviaSetup from '@/views/TriviaSetup'\nimport { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router'\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/setup',\n    name: 'TriviaSetup',\n    component: TriviaSetup,\n  },\n  {\n    path: '/game/:gameId',\n    props: true,\n    name: 'TriviaGame',\n    component: TriviaGame,\n  },\n  {\n    path: '/',\n    redirect: '/setup',\n  },\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes,\n})\n\nexport default router\n","import { createApp } from 'vue'\r\nimport App from './App'\r\nimport './registerServiceWorker'\r\nimport router from './router'\r\nimport './style.css'\r\n\r\ncreateApp(App).use(router).mount('#app')\r\n"],"sourceRoot":""}