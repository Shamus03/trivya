{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.tsx","webpack:///./src/registerServiceWorker.ts","webpack:///./src/api.ts","webpack:///./src/views/TriviaGame.tsx","webpack:///./src/hooks/useLocalStorage.ts","webpack:///./src/views/TriviaSetup.tsx","webpack:///./src/router/index.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","setup","ready","console","log","reloading","navigator","serviceWorker","addEventListener","location","reload","registered","cached","updatefound","updated","reg","confirm","waiting","postMessage","type","offline","error","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","games","collection","createGame","game","add","createdAt","Timestamp","now","doc","id","getGame","gameId","docToTriviaGame","getMostRecentGameIdByRoomCode","roomCode","where","orderBy","limit","empty","docs","OpenTdbResponseCode","openTdb","baseURL","openTdbSessionToken","getTriviaQuestions","difficulty","amount","categoryId","token","params","encode","category","resp","TokenEmpty","TokenNotFound","includes","response_code","Success","Error","results","map","q","correctAnswer","decodeURIComponent","correct_answer","allAnswers","incorrect_answers","a","concat","question","sort","reverse","getCategoryOptions","trivia_categories","props","String","required","loading","stateVersion","pointsForCorrectAnswer","questionNumber","score","selectedAnswer","handleKeyDown","e","code","currentQuestion","hasNextQuestion","goToNextQuestion","goToGameSetup","removeEventListener","lastGameState","JSON","parse","localStorage","getItem","version","undefined","oldState","correctAnswers","alert","state","setItem","stringify","questions","delayAfterChoosingAnswer","lastDelay","chooseAnswer","answer","clearTimeout","setTimeout","shareTheseQuestions","share","title","url","href","showNewGameButton","disabled","toLocaleString","tryParseJson","useLocalStorage","defaultValue","difficultyOptions","text","selectedDifficulty","allCategoriesOption","categoryOptions","b","localeCompare","selectedCategoryId","some","creatingGame","findingGame","startNewGame","goToGame","findGame","routes","path","component","TriviaSetup","TriviaGame","redirect","router","history","App","use","mount"],"mappings":"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","file":"js/app.79423429.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/trivya/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { defineComponent } from '@vue/runtime-core'\n\nexport default defineComponent({\n  setup() {\n    return () => <div>\n      <router-view />\n    </div>\n  },\n})\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB',\n      )\n      let reloading = false\n      navigator.serviceWorker.addEventListener('controllerchange', () => {\n        if (reloading) return\n        reloading = true\n        window.location.reload()\n      })\n    },\n    registered() {\n      console.log('Service worker has been registered.')\n    },\n    cached() {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound() {\n      console.log('New content is downloading.')\n    },\n    updated(reg) {\n      console.log('New content is available; please refresh.')\n      if (confirm('Updates available - refresh now?')) {\n        reg.waiting?.postMessage({ type: 'SKIP_WAITING' })\n      }\n    },\n    offline() {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error)\n    },\n  })\n}\n","import Axios from 'axios'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseApp  = firebase.initializeApp({\r\n  apiKey: 'AIzaSyDc2ej0u82U5xnQDWjzBNyFBHh3UwFyfpg',\r\n  authDomain: 'trivya-2135a.firebaseapp.com',\r\n  projectId: 'trivya-2135a',\r\n  storageBucket: 'trivya-2135a.appspot.com',\r\n  messagingSenderId: '448392939023',\r\n  appId: '1:448392939023:web:dedce129a86efbe4e1857a',\r\n})\r\n\r\nconst db = firebase.firestore(firebaseApp)\r\n\r\nconst games = db.collection('games')\r\n\r\nexport interface TriviaGame {\r\n  id: string\r\n  roomCode?: string\r\n  createdAt: firebase.firestore.Timestamp\r\n  questions: TriviaQuestion[]\r\n  difficulty: string\r\n  categoryId: number\r\n}\r\n\r\nexport interface TriviaQuestion {\r\n  question: string\r\n  category: string\r\n  difficulty: string\r\n  correctAnswer: string\r\n  allAnswers: string[]\r\n}\r\n\r\nexport async function createGame(game: Omit<TriviaGame, 'id' | 'createdAt'>): Promise<string> {\r\n  const doc = await games.add({\r\n    ...game,\r\n    createdAt: firebase.firestore.Timestamp.now(),\r\n  })\r\n  return doc.id\r\n}\r\n\r\nexport async function getGame(gameId: string): Promise<TriviaGame> {\r\n  const doc = await games.doc(gameId).get()\r\n  return docToTriviaGame(doc)\r\n}\r\n\r\nexport async function getMostRecentGameIdByRoomCode(roomCode: string): Promise<string | null> {\r\n  const result = await games\r\n    .where('roomCode', '==', roomCode)\r\n    .orderBy('createdAt', 'desc')\r\n    .limit(1)\r\n    .get()\r\n  if (result.empty) {\r\n    return null\r\n  }\r\n  return result.docs[0].id\r\n}\r\n\r\nconst docToTriviaGame = (doc: firebase.firestore.DocumentData): TriviaGame => {\r\n  const game = doc.data() as TriviaGame\r\n  game.id = doc.id\r\n  return game\r\n}\r\n\r\nconst openTdb = Axios.create({\r\n  baseURL: 'https://opentdb.com',\r\n})\r\nlet openTdbSessionToken = ''\r\n\r\nenum OpenTdbResponseCode {\r\n  Success = 0,\r\n  NoResults = 1,\r\n  InvalidParameter = 2,\r\n  TokenNotFound = 3,\r\n  TokenEmpty = 4,\r\n}\r\n\r\nexport async function getTriviaQuestions({ difficulty, amount, categoryId }: { difficulty?: string, amount?: number, categoryId?: number }): Promise<TriviaQuestion[]> {\r\n  if (!openTdbSessionToken) {\r\n    const resp = await openTdb.get<{\r\n      token: string\r\n    }>('/api_token.php?command=request')\r\n    openTdbSessionToken = resp.data.token\r\n  }\r\n  const resp = await openTdb.get<{\r\n    response_code: OpenTdbResponseCode,\r\n    results: {\r\n      question: string\r\n      category: string\r\n      type: string\r\n      difficulty: string\r\n      correct_answer: string\r\n      incorrect_answers: string[]\r\n    }[],\r\n  }>('/api.php', {\r\n    params: {\r\n      encode: 'url3986',\r\n      amount,\r\n      difficulty,\r\n      category: categoryId,\r\n      token: openTdbSessionToken,\r\n    },\r\n  })\r\n\r\n  if ([OpenTdbResponseCode.TokenEmpty, OpenTdbResponseCode.TokenNotFound].includes(resp.data.response_code)) {\r\n    openTdbSessionToken = ''\r\n    return await getTriviaQuestions({ difficulty, amount })\r\n  }\r\n\r\n  if (resp.data.response_code != OpenTdbResponseCode.Success) {\r\n    throw new Error('Failed to get questions')\r\n  }\r\n\r\n  return resp.data.results.map(q => {\r\n    const correctAnswer = decodeURIComponent(q.correct_answer)\r\n    const allAnswers = q.incorrect_answers.map((a: string) => decodeURIComponent(a)).concat(correctAnswer)\r\n    return {\r\n      category: decodeURIComponent(q.category),\r\n      difficulty: decodeURIComponent(q.difficulty),\r\n      question: decodeURIComponent(q.question),\r\n      correctAnswer,\r\n      allAnswers: q.type === 'boolean' ? allAnswers.sort().reverse() : allAnswers.sort(),\r\n    }\r\n  })\r\n}\r\n\r\nexport interface OpenTdbCategory {\r\n  id: number\r\n  name: string\r\n}\r\n\r\nexport const getCategoryOptions = async (): Promise<OpenTdbCategory[]> => {\r\n  const resp = await openTdb.get<{\r\n    trivia_categories: OpenTdbCategory[]\r\n  }>('/api_category.php')\r\n  return resp.data.trivia_categories\r\n}","import { getGame, TriviaGame } from '@/api'\r\nimport router from '@/router'\r\nimport { ref, computed, defineComponent, watchEffect, onBeforeMount, onBeforeUnmount } from '@vue/runtime-core'\r\nimport { Transition } from 'vue'\r\nimport canvasConfetti from 'canvas-confetti'\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    gameId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  setup(props) {\r\n    const game = ref(null as TriviaGame | null)\r\n\r\n    const loading = ref(false)\r\n\r\n    const stateVersion = 1 as const\r\n\r\n    const pointsForCorrectAnswer = 100\r\n\r\n    type LastGameState = {\r\n      version: typeof stateVersion,\r\n      gameId: string\r\n      score: number\r\n      questionNumber: number\r\n      selectedAnswer: string\r\n    }\r\n\r\n    const questionNumber = ref(0)\r\n    const score = ref(0)\r\n    const selectedAnswer = ref('')\r\n\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      switch (e.code) {\r\n      case 'Digit1':\r\n        selectedAnswer.value = currentQuestion.value.allAnswers[0]\r\n        break\r\n      case 'Digit2':\r\n        selectedAnswer.value = currentQuestion.value.allAnswers[1]\r\n        break\r\n      case 'Digit3':\r\n        selectedAnswer.value = currentQuestion.value.allAnswers[2]\r\n        break\r\n      case 'Digit4':\r\n        selectedAnswer.value = currentQuestion.value.allAnswers[3]\r\n        break\r\n      case 'Enter':\r\n        if (selectedAnswer.value) {\r\n          if (hasNextQuestion.value) {\r\n            goToNextQuestion()\r\n          } else {\r\n            goToGameSetup()\r\n          }\r\n        }\r\n        break\r\n      }\r\n    }\r\n    onBeforeMount(() => {\r\n      window.addEventListener('keydown', handleKeyDown)\r\n    })\r\n    onBeforeUnmount(() => {\r\n      window.removeEventListener('keydown', handleKeyDown)\r\n    })\r\n\r\n    watchEffect(async () => {\r\n      loading.value = true\r\n      try {\r\n        game.value = await getGame(props.gameId)\r\n        \r\n        let lastGameState: LastGameState | null = JSON.parse(localStorage.getItem('last-game') ?? 'null')\r\n\r\n        if (lastGameState?.gameId !== game.value.id) {\r\n          lastGameState = {\r\n            version: stateVersion,\r\n            gameId: game.value.id,\r\n            score: 0,\r\n            questionNumber: 0,\r\n            selectedAnswer: '',\r\n          }\r\n        }\r\n\r\n        // V0 to V1 conversion\r\n        if (lastGameState.version === undefined) {\r\n          /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\r\n          const oldState = lastGameState as any\r\n\r\n          lastGameState = {\r\n            version: stateVersion,\r\n            gameId: game.value.id,\r\n            score: oldState.correctAnswers * pointsForCorrectAnswer,\r\n            questionNumber: lastGameState.questionNumber,\r\n            selectedAnswer: lastGameState.selectedAnswer,\r\n          }\r\n        }\r\n        \r\n        questionNumber.value = lastGameState.questionNumber\r\n        score.value = lastGameState.score\r\n        selectedAnswer.value = lastGameState.selectedAnswer\r\n      } catch (e) {\r\n        alert('An error occurred - returning to main page')\r\n        goToGameSetup()\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    })\r\n\r\n    watchEffect(() => {\r\n      if (!game.value) return\r\n      \r\n      const state: LastGameState = {\r\n        version: stateVersion,\r\n        gameId: game.value.id,\r\n        questionNumber: questionNumber.value,\r\n        score: score.value,\r\n        selectedAnswer: selectedAnswer.value,\r\n      }\r\n      localStorage.setItem('last-game', JSON.stringify(state))\r\n    })\r\n\r\n    const questions = computed(() => game.value?.questions || [])\r\n\r\n    const currentQuestion = computed(() => questions.value[questionNumber.value])\r\n\r\n    const hasNextQuestion = computed(() => questionNumber.value < questions.value.length - 1)\r\n\r\n    const goToNextQuestion = () => {\r\n      if (hasNextQuestion.value) {\r\n        selectedAnswer.value = ''\r\n        questionNumber.value++\r\n      }\r\n    }\r\n\r\n    const goToGameSetup = () => {\r\n      router.push({ name: 'TriviaSetup' })\r\n    }\r\n\r\n    const delayAfterChoosingAnswer = ref(true)\r\n    let lastDelay = 0\r\n\r\n    const chooseAnswer = (answer: string) => {\r\n      if (selectedAnswer.value) {\r\n        return\r\n      }\r\n      delayAfterChoosingAnswer.value = false\r\n      selectedAnswer.value = answer\r\n      if (answer === currentQuestion.value.correctAnswer) {\r\n        score.value += pointsForCorrectAnswer\r\n      } \r\n      clearTimeout(lastDelay)\r\n      lastDelay = setTimeout(() => {\r\n        delayAfterChoosingAnswer.value = true\r\n      }, 1000)\r\n    }\r\n\r\n    const shareTheseQuestions = () => {\r\n      if (!navigator.share) {\r\n        alert('Your browser does not support sharing!')\r\n        return\r\n      }\r\n\r\n      navigator.share({\r\n        title: 'Trivya',\r\n        url: window.location.href,\r\n      })\r\n    }\r\n\r\n    const showNewGameButton = computed(() => {\r\n      return !hasNextQuestion.value && delayAfterChoosingAnswer.value\r\n    })\r\n\r\n    watchEffect(() => {\r\n      if (game.value && (score.value === game.value.questions.length * pointsForCorrectAnswer)) {\r\n        canvasConfetti()\r\n      }\r\n    })\r\n\r\n    return () => loading.value ? <div>Loading...</div> : <div>\r\n      <div class=\"share-these-questions\" onClick={shareTheseQuestions}>\r\n        Share these questions\r\n      </div>\r\n\r\n      <div class=\"question-progress\">\r\n        Question: {questionNumber.value + 1} / {questions.value.length}\r\n      </div>\r\n\r\n      <div class=\"difficulty\">\r\n        Difficulty: {currentQuestion.value.difficulty}\r\n      </div>\r\n\r\n      <div class=\"category\">\r\n        Category: {currentQuestion.value.category}\r\n      </div>\r\n\r\n      <Transition name=\"fade\" mode=\"out-in\">\r\n        <div key={questionNumber.value}>\r\n          <div class=\"question\">\r\n            {currentQuestion.value.question}\r\n          </div>\r\n\r\n          <div class=\"answers\">\r\n            <ul>\r\n              {currentQuestion.value.allAnswers.map(a =>\r\n                <li\r\n                  key={a}\r\n                  onClick={() => chooseAnswer(a)}\r\n                  class={{\r\n                    disabled: selectedAnswer.value,\r\n                    'correct-answer': selectedAnswer.value && a === currentQuestion.value.correctAnswer,\r\n                    'incorrect-answer': a === selectedAnswer.value && a !== currentQuestion.value.correctAnswer,\r\n                  }}\r\n                >\r\n                  {a}\r\n                </li>,\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Transition>\r\n\r\n      <Transition name=\"slide-fade\">\r\n        {!!selectedAnswer.value && <div>\r\n          <div class=\"score\">\r\n            Score: {score.value.toLocaleString()}\r\n          </div>\r\n\r\n          {hasNextQuestion.value &&\r\n            <div class=\"next-question\">\r\n              <button onClick={goToNextQuestion}>\r\n              Next Question\r\n              </button>\r\n            </div>\r\n          }\r\n\r\n          <Transition name=\"slide-fade\">\r\n            {showNewGameButton.value &&\r\n              <div class=\"set-up-new-game\">\r\n                <button onClick={goToGameSetup}>\r\n                Set up a new game\r\n                </button>\r\n              </div>}\r\n          </Transition>\r\n        </div>}\r\n      </Transition>\r\n    </div>\r\n  },\r\n})","import { Ref, ref, UnwrapRef, watchEffect } from '@vue/runtime-core'\r\n\r\nconst tryParseJson = <T>(s: string | null): T | undefined => {\r\n  if (!s) return undefined\r\n  try {\r\n    return JSON.parse(s)\r\n  } catch {\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport default function useLocalStorage<T>(key: string, defaultValue: T): Ref<UnwrapRef<T>> {\r\n  const value = ref(tryParseJson<T>(localStorage.getItem(key)) ?? defaultValue)\r\n  watchEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value.value))\r\n  })\r\n  return value\r\n}","import router from '@/router'\r\nimport { createGame, getTriviaQuestions, getMostRecentGameIdByRoomCode, getCategoryOptions, OpenTdbCategory } from '@/api'\r\nimport { defineComponent, onMounted, ref } from '@vue/runtime-core'\r\nimport useLocalStorage from '@/hooks/useLocalStorage'\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const difficultyOptions = [\r\n      { text: 'Any', value: '' },\r\n      { text: 'Easy', value: 'easy' },\r\n      { text: 'Medium', value: 'medium' },\r\n      { text: 'Hard', value: 'hard' },\r\n    ]\r\n    const selectedDifficulty = useLocalStorage('selected-difficulty', difficultyOptions[0].value)\r\n\r\n    const allCategoriesOption = { id: 0, name: 'All Categories' }\r\n    const categoryOptions = ref<OpenTdbCategory[]>([ allCategoriesOption ])\r\n    onMounted(async () => {\r\n      const c = await getCategoryOptions()\r\n      categoryOptions.value = [allCategoriesOption, ...c].sort((a, b) => a.name.localeCompare(b.name))\r\n    })\r\n    const selectedCategoryId = useLocalStorage('selected-category', 0)\r\n    if (!categoryOptions.value.some(o => o.id === selectedCategoryId.value)) {\r\n      categoryOptions.value.push({ id: selectedCategoryId.value, name: 'Loading...' })\r\n    }\r\n\r\n    const creatingGame = ref(false)\r\n    const findingGame = ref(false)\r\n\r\n    const roomCode = useLocalStorage('room-code', '')\r\n\r\n    const startNewGame = async () => {\r\n      creatingGame.value = true\r\n      try {\r\n        const difficulty = selectedDifficulty.value\r\n        const categoryId = selectedCategoryId.value\r\n        const questions = await getTriviaQuestions({\r\n          amount: 10,\r\n          difficulty,\r\n          categoryId,\r\n        })\r\n        const gameId = await createGame({ questions, roomCode: roomCode.value, difficulty, categoryId })\r\n        goToGame(gameId)\r\n      } finally {\r\n        creatingGame.value = false\r\n      }\r\n    }\r\n\r\n    const findGame = async () => {\r\n      findingGame.value = true\r\n      try {\r\n        const gameId = await getMostRecentGameIdByRoomCode(roomCode.value)\r\n        if (gameId) {\r\n          goToGame(gameId)\r\n        }\r\n      } finally {\r\n        findingGame.value = false\r\n      }\r\n    }\r\n\r\n    const goToGame = (gameId: string) => {\r\n      router.push({\r\n        name: 'TriviaGame',\r\n        params: {\r\n          gameId: gameId,\r\n        },\r\n      })\r\n    }\r\n\r\n    return () => <div>\r\n      <h4>Set up a new game</h4>\r\n\r\n      <div class=\"difficulty-selector\">\r\n        <div>Select a difficulty:</div>\r\n        {difficultyOptions.map(d =>\r\n          <div>\r\n            <label key={d.value}>\r\n              <input\r\n                v-model={selectedDifficulty.value}\r\n                type=\"radio\"\r\n                value={d.value}\r\n              />\r\n              {d.text}\r\n            </label>\r\n          </div>,\r\n        )}\r\n      </div>\r\n\r\n      <div class=\"category-selector\">\r\n        <label>\r\n          <div>Select a category:</div>\r\n          <select v-model={selectedCategoryId.value}>\r\n            {categoryOptions.value.map(c =>\r\n              <option key={c.id} value={c.id}>{c.name}</option>,\r\n            )}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      \r\n      <button class=\"start-new-game\" onClick={startNewGame} disabled={creatingGame.value}>\r\n        {!creatingGame.value ? 'Start!' : 'Loading...'}\r\n      </button>\r\n\r\n      <hr class=\"room-code-separator\" />\r\n      \r\n      <div class=\"room-code\">\r\n        <label>\r\n          <span>Room code: </span>\r\n          <input type=\"text\" v-model={roomCode.value}/>\r\n        </label>\r\n      </div>\r\n      \r\n      <div>\r\n        <button class=\"find-game-by-room-code\" onClick={findGame} disabled={findingGame.value}>\r\n          {!findingGame.value ? 'Find a Game' : 'Loading...'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  },\r\n})","import TriviaGame from '@/views/TriviaGame'\nimport TriviaSetup from '@/views/TriviaSetup'\nimport { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router'\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/setup',\n    name: 'TriviaSetup',\n    component: TriviaSetup,\n  },\n  {\n    path: '/game/:gameId',\n    props: true,\n    name: 'TriviaGame',\n    component: TriviaGame,\n  },\n  {\n    path: '/',\n    redirect: '/setup',\n  },\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes,\n})\n\nexport default router\n","import { createApp } from 'vue'\r\nimport App from './App'\r\nimport './registerServiceWorker'\r\nimport router from './router'\r\nimport './style.css'\r\n\r\ncreateApp(App).use(router).mount('#app')\r\n"],"sourceRoot":""}